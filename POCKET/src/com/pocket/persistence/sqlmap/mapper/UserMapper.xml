<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pocket.persistence.mapper.UserMapper">

<select resultType="userDTO" id="getUser"> SELECT * FROM aws.USER_INFO </select>


<insert id ="insert">
INSERT aws.INTO USER (ID, PASSWORD, USER_NO)
VALUES (#{id},#{password},#{user_no})	
</insert>

<!-- 회원가입 -->
<insert id="insertJoin" parameterType="userDTO" >
    INSERT INTO aws.USER_INFO(USER_NO, USER_ID, EMAIL,PASSWORD, USER_BARCODE, INCOME,JOB, GENDER, AGE, POINT, USER_AUTH, REG_USER_NO, REG_DT) 
    VALUES((SELECT IFNULL(MAX(UI.USER_NO),10000000)+1 FROM aws.USER_INFO UI), #{user_id}, #{email},#{password},'N',#{income},#{job}, 
    #{gender},#{age},'0','N', (SELECT IFNULL(MAX(UI.USER_NO),10000000)+1 FROM aws.USER_INFO UI), NOW())
</insert>

<!-- User_no 가져오기 -->
<select id="getUserNo" resultType="String">
	SELECT USER_NO
	FROM aws.USER_INFO
	WHERE EMAIL=#{email}
</select>

<!-- 인증컬럼 업데이트 -->
<update id="updateAuth">
	UPDATE aws.USER_INFO
	SET USER_AUTH='Y'
	WHERE USER_NO=#{user_no}
</update>

<!-- 로그인 -->
<select id="login" resultType="userDTO" > 
	SELECT USER_ID, EMAIL,PASSWORD,USER_AUTH 
	FROM aws.USER_INFO 
	WHERE EMAIL=#{email} and PASSWORD=#{password}
</select>

<!-- email 가져오기 -->
<select id="emailDuple" parameterType="String" resultType="Integer">
	SELECT count(1) FROM aws.USER_INFO WHERE EMAIL=#{email}
</select>

<!-- 비밀번호 재설정을 위한 인증키로 비밀번호 업데이트  -->
<update id="tempPwdChange" parameterType="LoginDTO">
	update aws.USER_INFO
	set PASSWORD=#{password}
	where EMAIL=#{email}
</update>

<!-- 임시 비밀번호 가져오기 -->
<select id ="getTempPwd" resultType="LoginDTO" parameterType="String">
	select PASSWORD
	from aws.USER_INFO
	where EMAIL =#{email}
</select>

</mapper>