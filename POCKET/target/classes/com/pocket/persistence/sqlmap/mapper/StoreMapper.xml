<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pocket.persistence.mapper.StoreMapper">
 <select resultType="StoreDTO" id="getStoreList"> 
select * from aws.STORE_INFO
</select>

<!--페이지 가져오는 select  -->
<select  id ="listPage" resultType="StoreDTO">
	<![CDATA[
	select STORE_NO, STORE_NAME,CATEGORY,CATEGORY_DETAIL,JIBUN_ADDR
	from aws.STORE_INFO
	where STORE_NO>0
	order by STORE_NO desc 
	limit #{page},10
	]]>

</select>

<select id="listCriteria" resultType="StoreDTO">
	<![CDATA[
		select STORE_NO, STORE_NAME,CATEGORY,CATEGORY_DETAIL,JIBUN_ADDR
		from aws.STORE_INFO
		where STORE_NO>0
		order by STORE_NO desc
		limit #{pageStart},#{perPageNum}
		
	]]>
</select>

<!-- 카운트 페이징 -->
<select id ="countPaging" resultType="int">
<![CDATA[
	select 
	count(STORE_NO)
	from aws.STORE_INFO
	where
	STORE_NO>0

]]>

</select>

<!--스토어 상세   -->
<select id="read" parameterType="String" resultType="StoreDTO">
	select STORE_NO,STORE_NAME,CATEGORY,
	CATEGORY_DETAIL,JIBUN_ADDR,LNG,LAT
	from aws.STORE_INFO
	where STORE_NO=#{store_no}
</select>

<!-- 스토어 삭제 -->
<delete id="delete" parameterType="String"> 
	delete from aws.STORE_INFO
	where STORE_NO=#{store_no}
</delete>


<!-- 스토어 수정 -->
<update id="update" parameterType="StoreDTO">
	update aws.STORE_INFO set
	STORE_NAME=#{store_name}, CATEGORY=#{category}, 
	CATEGORY_DETAIL=#{category_detail},JIBUN_ADDR=#{jibun_addr},
	LNG=#{lng}, LAT=#{lat}
	where STORE_NO=#{store_no}
</update>

<!-- 스토어 등록 -->
<insert id="create" parameterType="StoreDTO">
	insert into aws.STORE_INFO(STORE_NO, STORE_NAME, CATEGORY, CATEGORY_DETAIL, JIBUN_ADDR,LNG,LAT)
	values((SELECT IFNULL(MAX(SI.STORE_NO),10000000)+1 FROM aws.STORE_INFO SI), #{store_name},
			#{category},#{category_detail},#{jibun_addr},#{lng},#{lat})
</insert>


<!--첨부파일 등록 -->
<insert id="addStoreAttach">
insert into aws.STORE_IMG(FULL_NAME, STORE_NO,REGDATE) 
values (#{fullName},(SELECT IFNULL(MAX(SI.STORE_NO),10000000) FROM aws.STORE_INFO SI),NOW())
</insert>

<!-- 첨부파일 읽기 -->
<select id="getStoreAttach" resultType="String">
	select FULL_NAME from aws.STORE_IMG where STORE_NO=#{store_no}
</select>

<!-- 첨부파일삭제 -->
<delete id="deleteStoreAttach">
delete from aws.STORE_IMG where STORE_NO=#{store_no}
</delete>

<!-- 첨부파일 수정 -->
<insert id="replaceStoreAttach">
insert into aws.STORE_IMG(FULL_NAME,STORE_NO)
values(#{fullName},#{store_no})
</insert>

<!-- 첨부파일 가져오기 -->
<select id="storeImgAll" resultType="String">
select FULL_NAME from aws.STORE_IMG
order by REGDATE
</select>


<select id="getStoreByDate" resultType="StoreDTO">
select STORE_NAME,JIBUN_ADDR,CATEGORY,LNG,LAT
from aws.STORE_INFO
order by REG_DATE
limit 7
</select>

<select id="storeDetailFile" parameterType="String" resultType="StoreDTO">
select *from aws.STORE_INFO where STORE_NO=(select STORE_NO from aws.STORE_IMG 
 where 
FULL_NAME=#{fullName})
</select>
</mapper>